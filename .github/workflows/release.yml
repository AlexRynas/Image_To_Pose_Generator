name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            runtime: win-x64
            artifact-name: ImageToPose-Windows-x64
          - os: windows-latest
            runtime: win-arm64
            artifact-name: ImageToPose-Windows-ARM64
          - os: ubuntu-latest
            runtime: linux-x64
            artifact-name: ImageToPose-Linux-x64
          - os: macos-latest
            runtime: osx-x64
            artifact-name: ImageToPose-macOS-x64
          - os: macos-latest
            runtime: osx-arm64
            artifact-name: ImageToPose-macOS-ARM64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore src/DesktopApp/ImageToPose.sln

      - name: Run tests
        run: dotnet test src/DesktopApp/ImageToPose.sln --no-restore --verbosity normal

      - name: Publish application
        run: |
          dotnet publish src/DesktopApp/ImageToPose.Desktop/ImageToPose.Desktop.csproj `
            --configuration Release `
            --runtime ${{ matrix.runtime }} `
            --self-contained true `
            --output ./publish/${{ matrix.runtime }} `
            -p:PublishSingleFile=true `
            -p:IncludeNativeLibrariesForSelfExtract=true `
            -p:EnableCompressionInSingleFile=true `
            -p:DebugType=None `
            -p:DebugSymbols=false

      - name: Create archive (Windows)
        if: runner.os == 'Windows'
        run: |
          Compress-Archive -Path ./publish/${{ matrix.runtime }}/* -DestinationPath ./${{ matrix.artifact-name }}.zip

      - name: Create archive (Unix)
        if: runner.os != 'Windows'
        run: |
          cd ./publish/${{ matrix.runtime }}
          zip -r ../../${{ matrix.artifact-name }}.zip .
          cd ../..

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-name }}.zip

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            ./artifacts/ImageToPose-Windows-x64/ImageToPose-Windows-x64.zip
            ./artifacts/ImageToPose-Windows-ARM64/ImageToPose-Windows-ARM64.zip
            ./artifacts/ImageToPose-Linux-x64/ImageToPose-Linux-x64.zip
            ./artifacts/ImageToPose-macOS-x64/ImageToPose-macOS-x64.zip
            ./artifacts/ImageToPose-macOS-ARM64/ImageToPose-macOS-ARM64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
